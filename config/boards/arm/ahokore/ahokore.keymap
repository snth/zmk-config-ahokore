/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {

behaviors {
      hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping_term_ms = <200>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };

    combos {
    compatible = "zmk,combos";
    
    combo_ampersand {
        timeout-ms = <50>;
        key-positions = <0 1>;
        bindings = <&kp AMPERSAND>;
        layers = <0 1 2>;
    };
    combo_grave {
        timeout-ms = <50>;
        key-positions = <1 2>;
        bindings = <&kp GRAVE>;
        layers = <0 1 2>;
    };
    combo_pipe {
        timeout-ms = <50>;
        key-positions = <2 3>;
        bindings = <&kp PIPE>;
        layers = <0 1 2>;
    };
    combo_excl {
        timeout-ms = <50>;
        key-positions = <3 4>;
        bindings = <&kp EXCL>;
        layers = <0 1 2>;
    };
    
    combo_esc {
        timeout-ms = <50>;
        key-positions = <10 11>;
        bindings = <&kp ESC>;
        layers = <0 1 2>;
    };
    combo_tab {
        timeout-ms = <50>;
        key-positions = <11 12>;
        bindings = <&kp TAB>;
        layers = <0 1 2>;
    };
    combo_enter {
        timeout-ms = <50>;
        key-positions = <12 13>;
        bindings = <&kp ENTER>;
        layers = <0 1 2>;

    };
    combo_bslh {
        timeout-ms = <50>;
        key-positions = <13 14>;
        bindings = <&kp BSLH>;
        layers = <0 1 2>;
    };
    
    combo_lbrc {
        timeout-ms = <50>;
        key-positions = <20 21>;
        bindings = <&kp LBRC>;
        layers = <0 1 2>;
    };
    combo_dqt {
        timeout-ms = <50>;
        key-positions = <21 22>;
        bindings = <&kp DQT>;
        layers = <0 1 2>;
    };
    combo_rbrc {
        timeout-ms = <50>;
        key-positions = <22 23>;
        bindings = <&kp RBRC>;
        layers = <0 1 2>;
    };
    combo_semi {
        timeout-ms = <50>;
        key-positions = <23 24>;
        bindings = <&kp SEMICOLON>;
        layers = <0 1 2>;
    };
    
    combo_ques {
        timeout-ms = <50>;
        key-positions = <5 6>;
        bindings = <&kp QUESTION>;
        layers = <0 1 2>;
    };
    combo_equal {
        timeout-ms = <50>;
        key-positions = <6 7>;
        bindings = <&kp EQUAL>;
        layers = <0 1 2>;
    };
    combo_minus {
        timeout-ms = <50>;
        key-positions = <7 8>;
        bindings = <&kp MINUS>;
        layers = <0 1 2>;
    };
    combo_under {
        timeout-ms = <50>;
        key-positions = <8 9>;
        bindings = <&kp UNDER>;
        layers = <0 1 2>;
    };
    
    combo_plus {
        timeout-ms = <50>;
        key-positions = <15 16>;
        bindings = <&kp PLUS>;
        layers = <0 1 2>;
    };
    combo_pgup {
        timeout-ms = <50>;
        key-positions = <16 17>;
        bindings = <&kp PG_UP>;
        layers = <0 1 2>;
    };
    combo_bspc {
        timeout-ms = <50>;
        key-positions = <17 18>;
        bindings = <&kp BKSP>;
        layers = <0 1 2>;
    };
    combo_pgdn {
        timeout-ms = <50>;
        key-positions = <18 19>;
        bindings = <&kp PG_DN>;
        layers = <0 1 2>;
    };
    
    combo_at {
        timeout-ms = <50>;
        key-positions = <25 26>;
        bindings = <&kp AT_SIGN>;
        layers = <0 1 2>;
    };
    combo_rpar {
        timeout-ms = <50>;
        key-positions = <26 27>;
        bindings = <&kp RPAR>;
        layers = <0 1 2>;
    };
    combo_colon {
        timeout-ms = <50>;
        key-positions = <27 28>;
        bindings = <&kp COLON>;
        layers = <0 1 2>;
    };
    combo_lpar {
        timeout-ms = <50>;
        key-positions = <28 29>;
        bindings = <&kp LPAR>;
        layers = <0 1 2>;
    };
};

};
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  Z  |  W  |  F  |  P  |  B   |   J  |  L  |  U  |  Y  |  Q  |
// |  A  |  R  |  S  |  T  |  G   |   M  |  N  |  E  |  I  |  O  |
// |  '  |  X  |  C  |  D  |  K   |   V  |  H  |  /  |  .  |  ,  |
//             | CTL |2/SPC|1/TAB | 1/ENT| SFT | ALT |
                        bindings = <
   &kp Z      &kp W      &kp F       &kp P       &kp B   &kp J &kp L       &kp U        &kp Y       &kp Q
   &kp A      &kp R      &kp S       &kp T       &kp G   &kp M &kp N       &kp E        &kp I       &kp O
   &kp APOS   &kp X      &kp C       &kp D       &kp K   &kp V &kp H       &kp SLASH    &kp DOT     &kp COMMA
              &sk LCTRL  &lt 3 SPACE &lt 1 TAB                 &lt 2 ENTER &sk RSHFT    &sk RALT
                        >;
                };

                sym_layer {
// -----------------------------------------------------------------------------------------
// |  &  |  %  |  #  |  !  |  `  |  *  |  ?  |  @  |  $  |  ^  |
// |  [  |  {  |  }  |  ]  |  \  | BSPC|  :  |  )  |  (  |  _  |
// |  '  |  <  |  >  |  "  |  ;  |  -  |  =  |  /  |  .  |  ,  |
//             |     |     |     |     |     |     |
                        bindings = <
   &kp AMPERSAND &kp PERCENT   &kp HASH       &kp EXCL       &kp GRAVE   &kp STAR  &kp QUESTION    &kp AT_SIGN     &kp DOLLAR    &kp CARET
   &hm LALT LBKT &hm LGUI LBRC &hm LSHFT RBRC &hm LCTRL RBKT &kp BSLH    &kp BSPC  &hm RCTRL COLON &hm RSHFT RPAR  &hm RGUI LPAR &hm RALT UNDER
   &kp APOS      &kp LT        &kp GT         &kp DQT        &kp SEMI    &kp MINUS &kp EQUAL       &trans          &trans        &trans
                 &trans        &trans         &trans                               &trans          &mt RSHFT SPACE &trans
                        >;
                };

                num_layer {
// -----------------------------------------------------------------------------------------
// |  7  |  5  |  3  |  1  |  9  |  8  |  0  |  2  |  4  |  6  |
// |  [  |  {  |  }  |  ]  |  \  | BSPC|  :  |  )  |  (  |  _  |
// |  '  |  <  |  >  |  "  |  ;  |  -  |  =  |  /  |  .  |  ,  |
//             |     |     |     |     |     |     |
                        bindings = <
   &kp N7        &kp N5        &kp N3         &kp N1         &kp N9      &kp N8    &kp N0          &kp N2         &kp N4        &kp N6
   &hm LALT LBKT &hm LGUI LBRC &hm LSHFT RBRC &hm LCTRL RBKT &kp BSLH    &kp BSPC  &hm RCTRL COLON &hm RSHFT RPAR &hm RGUI LPAR &hm RALT UNDER
   &kp APOS      &kp LT        &kp GT         &kp DQT        &kp SEMI    &kp MINUS &kp EQUAL       &trans         &trans        &trans
                 &trans        &kp SPACE      &trans                               &trans          &trans         &trans
                        >;
                };

                nav_layer {
// -----------------------------------------------------------------------------------------
// | BT3 | BT2 | BT1 | BT0  |BTCLR|      | HOME | PGUP | PGDN | END  |
// | DEL | RET | TAB | ESC  |     |      | LEFT |  UP  | DOWN | RIGHT|
// | UNDO| CUT | COPY| PASTE|CTL+K|      |      |      |      |      |
//             |     |      |     |      |      |      |
                        bindings = <
   &bt BT_SEL 3 &bt BT_SEL 2 &bt BT_SEL 1  &bt BT_SEL 0   &bt BT_CLR &trans    &kp HOME  &kp PG_UP       &kp PG_DN &kp END
   &hm LALT DEL &hm LGUI RET &hm LSHFT TAB &hm LCTRL ESC  &trans     &kp BSPC  &kp LEFT  &kp UP          &kp DOWN  &kp RIGHT
   &kp LC(Z)    &kp LC(X)    &kp LC(C)     &kp LC(V)      &kp LC(K)  &kp MINUS &kp EQUAL &trans          &trans    &trans
                &trans       &trans        &trans                              &trans    &mt RSHFT SPACE &trans
                        >;
                };


        };
};
